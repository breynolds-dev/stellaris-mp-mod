mega_shipyard = 
{
	entity = "mega_shipyard_entity"
	construction_entity = "mega_shipyard_entity"
	portrait = "GFX_mega_shipyard"
	place_entity_on_planet_plane = no
	construction_blocks_others = no
	entity_offset = { x = -7 y = -15 }
	build_time = 2160
	build_cost = { minerals = 30000 influence = 400 }
	maintenance = { energy = 100 minerals = 100 influence = 1 }
	potential = { 
		has_ascension_perk = ap_galactic_force_projection 
			}
	possible = 
	{

		custom_tooltip = { fail_text = "requires_inside_border" is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system" NOT = { any_planet = { is_surveyed = { who = prev.from status = no } } } }
		custom_tooltip = { fail_text = "Can build only one Mega Shipyard" from = { NOT = { has_country_flag = built_mega_shipyard } } }	
		custom_tooltip = { fail_text = "Can only be built in the same system than one of our Starport having at least one Shipyard Module" AND = { exists = starbase starbase = { owner = { is_same_value = from } starbase = { has_starbase_module = shipyard } } } }		
	}
	placement_rules = 
	{
		planet_possible =
		{
			#custom_tooltip = { fail_text = "must_build_around_star" is_star = yes }
			#custom_tooltip = { fail_text = "requires_no_orbital_station" has_orbital_station = no }
			custom_tooltip = { fail_text = "requires_no_anomaly" NOT = { has_anomaly = yes } }
			custom_tooltip = 
			{
				fail_text = "requires_no_existing_megastructure"
				NOR = 
				{
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
				}
			}
		}
	}	
	ai_weight = 
	{
		factor = 0
		modifier = { factor = 0.1 has_any_megastructure_in_empire = yes }	
	}
	on_build_start = {}
	on_build_cancel = {}
	on_build_complete = 
	{
		set_star_flag = mega_shipyard_built
		from = 
		{ 
			set_country_flag = built_mega_shipyard
			country_event = { id = MegaShipyardEvent.1 }
		}
	}
}